defaults: &defaults
  docker:
  - image: kaleeaswari/infrabox
  working_directory: /home/circleci/project

version: 2.1
jobs:
 dummy:
    <<: *defaults
    steps:
    - run:
        command: echo "hello world"

 firstTimeSetup:
   <<: *defaults
   steps:
   - checkout
   - run:
       command: source /okta_venv/bin/activate;
               ./scripts/create_tf_state_bucket.sh $TRAINING_COHORT;
               ./scripts/create_key_pair.sh $TRAINING_COHORT;

 buildEnvironment:
     <<: *defaults
     steps:
     - checkout
     - run:
         command: source /okta_venv/bin/activate;
                 ./scripts/run_terraform.sh $TRAINING_COHORT base_networking apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT bastion apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_bucket apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_emr_cluster apply -input=false -auto-approve -var-file=prod-env.tfvars;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_airflow apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT emr_sg_update apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_kafka apply -input=false -auto-approve -var-file=prod-env.tfvars;
                 ./scripts/run_terraform.sh $TRAINING_COHORT ingester apply -input=false -auto-approve -var-file=prod-env.tfvars;
                 ./scripts/run_terraform.sh $TRAINING_COHORT monitoring_dashboard apply -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT client_vpn apply -input=false -auto-approve;

 buildClientVPN:
     <<: *defaults
     steps:
     - checkout
     - run:
         command: source /okta_venv/bin/activate;
                  ./scripts/run_terraform.sh $TRAINING_COHORT client_vpn apply -input=false -auto-approve;

 buildAMIs:
     <<: *defaults
     steps:
     - checkout
     - run:
         command: source /okta_venv/bin/activate;
                 ./scripts/build_ami.sh training_kafka ;
                 ./scripts/build_ami.sh training_ingester ;

 destroyEnvironment:
     <<: *defaults
     steps:
     - checkout
     - run:
         command: source /okta_venv/bin/activate;
                 ./scripts/run_terraform.sh $TRAINING_COHORT client_vpn destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT monitoring_dashboard destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT ingester destroy -input=false -auto-approve -var-file=prod-env.tfvars ;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_kafka destroy -input=false -auto-approve -var-file=prod-env.tfvars ;
                 ./scripts/run_terraform.sh $TRAINING_COHORT emr_sg_update destroy -input=false -auto-approve -var-file=prod-env.tfvars ;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_airflow destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_emr_cluster destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT training_bucket destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT bastion destroy -input=false -auto-approve;
                 ./scripts/run_terraform.sh $TRAINING_COHORT base_networking destroy -input=false -auto-approve;

workflows:
  version: 2.1
  build:
    jobs:
      - dummy

      - approveQAEnvSetup:
          context: qa
          type: approval
          requires:
            - dummy
      - approvefirstTimeQASetup:
          context: qa
          type: approval
          requires:
            - approveQAEnvSetup

      - firstTimeSetup:
          context: qa
          requires:
            - approvefirstTimeQASetup

      - approvebuildQAAMIs:
          context: qa
          type: approval
          requires:
            - approveQAEnvSetup

      - buildAMIs:
          context: qa
          requires:
            - approvebuildQAAMIs
      - approveBuildEnvironmentQA:
          context: qa
          type: approval
          requires:
            - approveQAEnvSetup

      - buildEnvironment:
          name: qaEnvironmentSetup
          context: qa
          requires:
            - approveBuildEnvironmentQA

      - approvebuildQAClientVPN:
          context: qa
          type: approval
          requires:
            - approveQAEnvSetup
      - buildClientVPN:
          context: qa
          requires:
            - approvebuildQAClientVPN

      - approveDestroyQAEnvironment:
          context: qa
          type: approval
          requires:
            - approveQAEnvSetup
      - destroyEnvironment:
          context: qa
          requires:
            - approveDestroyQAEnvironment


      # Test environment setup starts here.

      - approveTestEnvSetup:
          context: test
          type: approval
          requires:
            - dummy

      - approvefirstTimeSetup:
          context: test
          type: approval
          requires:
            - approveTestEnvSetup
      - firstTimeSetup:
          context: test
          requires:
            - approvefirstTimeSetup

      - approvebuildAMIs:
          context: test
          type: approval
          requires:
            - approveTestEnvSetup
      - buildAMIs:
          context: test
          requires:
            - approvebuildAMIs

      - approveBuildEnvironmentTest:
          context: test
          type: approval
          requires:
            - approveTestEnvSetup
      - buildEnvironment:
          name: testEnvironmentSetup
          context: test
          requires:
            - approveBuildEnvironmentTest

      - approvebuildClientVPN:
          context: test
          type: approval
          requires:
            - approveTestEnvSetup
      - buildClientVPN:
          context: test
          requires:
            - approvebuildClientVPN

      - approveDestroyEnvironment:
          context: test
          type: approval
          requires:
            - approveTestEnvSetup
      - destroyEnvironment:
          context: test
          requires:
            - approveDestroyEnvironment
      # Production workflow begin here...
      - approveProdEnvSetup:
          context: production
          type: approval
          requires:
            - dummy

      - approvefirstTimeSetupProd:
          context: production
          type: approval
          requires:
            - approveProdEnvSetup
      - firstTimeSetup:
          context: production
          requires:
            - approvefirstTimeSetupProd

      - approvebuildAMIsProd:
          context: production
          type: approval
          requires:
            - approveProdEnvSetup
      - buildAMIs:
          context: production
          requires:
            - approvebuildAMIsProd

      - approveBuildEnvironmentProd:
          context: production
          type: approval
          requires:
            - approveProdEnvSetup
      - buildEnvironment:
          name: prodEnvironmentSetup
          context: production
          requires:
            - approveBuildEnvironmentProd

      - approvebuildClientVPNProd:
          context: production
          type: approval
          requires:
            - approveProdEnvSetup
      - buildClientVPN:
          context: production
          requires:
            - approvebuildClientVPNProd

      - approveDestroyEnvironmentProd:
          context: production
          type: approval
          requires:
            - approveProdEnvSetup
      - destroyEnvironment:
          context: production
          requires:
            - approveDestroyEnvironmentProd